name: Deploy Next.js to AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: |
          NODE_ENV=production npm run build

      - name: Debug build folder
        run: |
          ls -la
          ls -la .next
          ls -la .next/standalone || echo "NO .next/standalone ðŸ˜¡"
          ls -la .next/standalone/.next || echo "NO .next/standalone/.next ðŸ˜¡"

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Cleanup old build directory
        run: ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.SERVER_IP }} "rm -rf /var/www/maxkab/build_new"

      - name: Prepare new build directory
        run: ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.SERVER_IP }} "mkdir -p /var/www/maxkab/build_new"

      - name: Create start script
        run: |
          echo '#!/bin/bash
          cd /var/www/maxkab/build
          export NODE_ENV=production
          export PORT=3000
          node server.js' > start.sh
          chmod +x start.sh

      - name: Archive build
        run: |
          mkdir -p archive
          cp -r .next/standalone/. archive/
          cp -r .next/static archive/.next/static
          cp -r public archive/
          cp package.json archive/
          cp start.sh archive/
          tar -czf build.tar.gz -C archive .

      - name: Upload archive
        run: |
          scp -i ~/.ssh/id_ed25519 build.tar.gz ubuntu@${{ secrets.SERVER_IP }}:/var/www/maxkab/

      - name: Extract archive on server
        run: |
          ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.SERVER_IP }} '
            rm -rf /var/www/maxkab/build_new &&
            mkdir -p /var/www/maxkab/build_new &&
            tar -xzf /var/www/maxkab/build.tar.gz -C /var/www/maxkab/build_new &&
            rm /var/www/maxkab/build.tar.gz
          '

      - name: Atomically swap build folders
        run: ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.SERVER_IP }} "cd /var/www/maxkab && sudo rm -rf build && sudo mv build_new build"

      - name: Set correct permissions
        run: ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.SERVER_IP }} "sudo chown -R www-data:www-data /var/www/maxkab/build && sudo chmod -R 755 /var/www/maxkab/build"

      - name: Restart app with PM2
        run: |
          ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.SERVER_IP }} '
            source ~/.nvm/nvm.sh
            cd /var/www/maxkab/build
            pm2 start ./start.sh --name maxkab || pm2 restart maxkab
          '

      - name: Cleanup old build directory
        run: ssh -i ~/.ssh/id_ed25519 ubuntu@${{ secrets.SERVER_IP }} "rm -rf /var/www/maxkab/build_new"
